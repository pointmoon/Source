#include <stdio.h>
#include <conio.h>
#include <graphics.h>
#include <stdlib.h>
#include <dos.h>
#include <math.h>
#include <string.h>
/*______________________*/
#include "helper.h"

int main()
{
    setlocale(LC_ALL, "Russian");
	int x,y,tmp,gdriver = DETECT,gmode,errorcode;
	int xf=10,yf=10,zf=10,d=200,f1=0,f2=0,f3=0;
	float Sx=1.01,Sy=1.01,Sz=1.01,angle=0.2;
	float cub[8][3]={{50,50,100},{100,50,100},
				  {100,50,50},{50,50,50},
				  {50,100,100},{100,100,100},
				  {100,100,50},{50,100,50}};

	char c;
	initgraph(&gdriver, &gmode, "..\\BGI");
	cleardevice();
	errorcode = graphresult();
	if (errorcode != grOk){
		printf("Graphics error: %s\n", grapherrormsg(errorcode));
		printf("Press any key to halt:");
		getch();
		exit(1);
	}
	sides_show(cub,1);
	do{
		if ( kbhit() ) c=getch();
		cleardevice();
		switch( c ){
			case 'w': {yf-=5; move(cub,0,yf,0); c=' ';
                       break;}
            case 's': {yf+=5; move(cub,0,yf,0); c=' ';
                       break;}
            case 'a': {xf-=5; move(cub,xf,0,0); c=' ';
                       break;}
            case 'd': {xf+=5; move(cub,xf,0,0); c=' ';
                       break;}
			case '+': {Sx+=0.01; scale(cub,Sx,1,1); c=' ';
                       Sy+=0.01; scale(cub,1,Sy,1); c=' ';
                       Sz+=0.01; scale(cub,1,1,Sz); c=' ';
                       break;}
			case '-': {
                       Sx-=0.01; scale(cub,Sx,1,1); c=' ';
                       Sy-=0.01; scale(cub,1,Sy,1); c=' ';
                       Sz-=0.01; scale(cub,1,1,Sz); c=' ';
                       break;}
			case 'z': angle+=0.1; c=' '; break;
			case 'x': angle-=0.1; c=' '; break;
			case '1': c=' '; if( f1==1 ) f1=0; else f1=1; break;
			case '2': c=' '; if( f2==1 ) f2=0; else f2=1; break;
			case '3': c=' '; if( f3==1 ) f3=0; else f3=1; break;
		}
		rotation(f1,f2,f3);
		if ( f1 ) rotx(cub,angle);
		if ( f2 ) roty(cub,angle);
		if ( f3 ) rotz(cub,angle);
		sides_show(cub,1);
		Sleep(d);
	}while(c!=27);
	return 0;
}




/////////////////////////////////////////////////////////////////




#ifndef HELPER_H_INCLUDED
#define HELPER_H_INCLUDED

float avg(float z0,float z1,float z2,float z3)
{
	return ((float)(z0+z1+z2+z3))/4;
}

void draw_side(float c[8][3],int i,int j,int k,int l)
{
	int poly[8];
	int midx=ceil(getmaxx()/2);
	int midy=ceil(getmaxy()/2);
	poly[0]=ceil(c[i][0])+midx;
	poly[1]=ceil(c[i][1])+midy;
	poly[2]=ceil(c[j][0])+midx;
	poly[3]=ceil(c[j][1])+midy;
	poly[4]=ceil(c[k][0])+midx;
	poly[5]=ceil(c[k][1])+midy;
	poly[6]=ceil(c[l][0])+midx;
	poly[7]=ceil(c[l][1])+midy;
	fillpoly(4,poly);
}

void sides_show(float c[][3],int f)
{
	float mid,sum=0;
	long i;
	char s[10];
	for(i=0;i<8;i++) sum+=c[i][2];
	mid=((float)sum)/8;
	if( f==0 ) setfillstyle(1,getbkcolor());
	if( (i=avg(c[0][2],c[1][2],c[2][2],c[3][2]))>mid ){
		if( f==1 ) setfillstyle(1,1);
		draw_side(c,0,1,2,3);
	}
	if( (i=avg(c[3][2],c[2][2],c[6][2],c[7][2]))>mid ){
		if( f==1 ) setfillstyle(1,2);
		draw_side(c,3,2,6,7);
	}
	if( (i=avg(c[2][2],c[1][2],c[5][2],c[6][2]))>mid ){
		if( f==1 ) setfillstyle(1,3);
		draw_side(c,2,1,5,6);
	}
	if( (i=avg(c[0][2],c[1][2],c[5][2],c[4][2]))>mid ){
		if( f==1 ) setfillstyle(1,4);
		draw_side(c,0,1,5,4);
	}
	if( (i=avg(c[0][2],c[3][2],c[7][2],c[4][2]))>mid ){
		if( f==1 ) setfillstyle(1,5);
		draw_side(c,0,3,7,4);
	}
	if( (i=avg(c[4][2],c[5][2],c[6][2],c[7][2]))>mid ){
		if( f==1 ) setfillstyle(1,6);
		draw_side(c,4,5,6,7);
	}
}

void move(float c[][3],int xf,int yf,int zf)
{
	for(int i=0;i<8;i++){
		c[i][0]+=xf;
		c[i][1]+=yf;
		c[i][2]+=zf;
	}
}

void scale(float c[][3],float Sx,float Sy,float Sz)
{
	for(int i=0;i<8;i++){
		c[i][0]*=Sx;
		c[i][1]*=Sy;
		c[i][2]*=Sz;
	}
}

void rotx(float c[][3],float an)
{
	float tmp;
	for(int i=0;i<8;i++){
		tmp=c[i][1];
		c[i][1]=tmp*cos(an)-c[i][2]*sin(an);
		c[i][2]=tmp*sin(an)+c[i][2]*cos(an);
	}
}

void roty(float c[][3],float an)
{
	float tmp;
	for(int i=0;i<8;i++){
		tmp=c[i][0];
		c[i][0]=tmp*cos(an)-c[i][2]*sin(an);
		c[i][2]=tmp*sin(an)+c[i][2]*cos(an);
	}
}

void rotz(float c[][3],float an)
{
	float tmp;
	for(int i=0;i<8;i++){
		tmp=c[i][0];
		c[i][0]=tmp*cos(an)-c[i][1]*sin(an);
		c[i][1]=tmp*sin(an)+c[i][1]*cos(an);
	}
}

void rotation(int f1,int f2,int f3)
{
	if( f1 ) outtextxy(10,20,"Вращение по оси X: Вкл");
	else outtextxy(10,20,"Вращение по оси X: Выкл ");
	if( f2 ) outtextxy(10,40,"Вращение по оси Y: Вкл");
	else outtextxy(10,40,"Вращение по оси Y: Выкл ");
	if( f3 ) outtextxy(10,60,"Вращение по оси Z: Вкл");
	else outtextxy(10,60,"Вращение по оси Z: Выкл ");

}

#endif // HELPER_H_INCLUDED
